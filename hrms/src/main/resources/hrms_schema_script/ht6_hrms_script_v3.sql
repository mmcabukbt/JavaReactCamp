-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.

-- Araştırıp uygun bulduğum REGEX email value check constraint değerleri:
-- ^[\w!#$%&''*+/=?`{|}~^-]+(?:\.[\w!#$%&''*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,6}$			// Benim Tercihim
-- >>> IP Adresli emaile doğru validasyon + %99.9 Doğru validasyon (İddiaları bu) https://emailregex.com;
-- (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
-- ^[a-zA-Z0-9_+&*-]+(?:\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$			// OWASP Validation Regex Repository
-- ^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$			// HTML input-email (eski)
-- ^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$   //HTML5-input(yeni) Ancak süzgeç gibi

BEGIN;

CREATE DOMAIN public.checked_email
    AS character varying(100)
    NOT NULL;
ALTER DOMAIN public.checked_email
    ADD CONSTRAINT email_format CHECK (VALUE ~ '^[\w!#$%&''*+/=?`{|}~^-]+(?:\.[\w!#$%&''*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,6}$');

ALTER DOMAIN public.checked_email OWNER TO postgres;
COMMENT ON DOMAIN public.checked_email
    IS 'email format checkini otomatik yapar';

CREATE IF NOT EXISTS TABLE public."claims"
(
    id smallserial PRIMARY KEY,
    name character varying(50) UNIQUE NOT NULL
);
COMMENT ON TABLE public."claims"
    IS 'Tüm Usersin alabileceği rol/claim/haklar';

CREATE IF NOT EXISTS TABLE public."users"
(
    id bigserial PRIMARY KEY,
    "email" checked_email UNIQUE NOT NULL, --PRIMARY KEY ile aynı!
    "password_hash" bytea NOT NULL,
	"password_salt" bytea NOT NULL,	
	"active" boolean DEFAULT false NOT NULL
);
COMMENT ON TABLE public."users"
    IS 'Tüm kullanıcıların temel sınıfı';

CREATE IF NOT EXISTS TABLE public."user_claims"
(
	"user_id" bigint NOT NULL REFERENCES public."users" (id) MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE,
    "claim_id" smallint NOT NULL DEFAULT 30 REFERENCES public."claims" (id) MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE
);
COMMENT ON TABLE public."user_claims"
    IS 'Tüm Usersin aldığı rol/claim/haklar';

CREATE IF NOT EXISTS TABLE public."industries"
(
    id smallserial PRIMARY KEY,
    name character varying(50) UNIQUE NOT NULL
);
COMMENT ON TABLE public."industries"
    IS 'Temel Sınıf İş Kategorileri';

CREATE IF NOT EXISTS TABLE public."sub_job_categories"
(
    id smallserial PRIMARY KEY,
    name character varying(50) UNIQUE NOT NULL
);
COMMENT ON TABLE public."sub_job_categories"
    IS 'Alt Sınıf İş Kategorileri';

CREATE IF NOT EXISTS TABLE public."jobs"
(
    id smallserial PRIMARY KEY,
	"industry_id" smallint REFERENCES public."industries" (id) NOT NULL,
    "sub_job_category_id" smallint REFERENCES public."sub_job_categories" (id) NOT NULL,
    "title" character varying(50) UNIQUE NOT NULL
);
COMMENT ON TABLE public."sub_job_categories"
    IS 'Genel iş pozisyonları';

CREATE IF NOT EXISTS TABLE public."persons"
(
    "user_id" bigint PRIMARY KEY REFERENCES public."users" (id) MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE,
    "tckno" character(11) UNIQUE NOT NULL,
    "first_name" character varying(50) NOT NULL,
    "last_name" character varying(50) NOT NULL,
    "year_of_birth" smallint NOT NULL
);
COMMENT ON TABLE public."persons"
    IS 'Tüm Gerçek Kişiler için temel sınıf';

CREATE IF NOT EXISTS TABLE public."staffs"
(
    "user_id" bigint PRIMARY KEY REFERENCES public."persons" ("user_id") MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE,
    "job_id" smallint REFERENCES public."jobs" (id) NOT NULL,
	"salary" double precision NOT NULL DEFAULT 0
);
COMMENT ON TABLE public."staffs"
    IS 'Sistem Personeli';

CREATE IF NOT EXISTS TABLE public."jobseekers"
(
    "user_id" bigint PRIMARY KEY REFERENCES public."persons" ("user_id") MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE,
    "jobseek_status" boolean NOT NULL DEFAULT true
);
COMMENT ON TABLE public."jobseekers"
    IS 'İş Arayanlar';

CREATE IF NOT EXISTS TABLE public."corporates"
(
    "user_id" bigint PRIMARY KEY REFERENCES public."users" (id) MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE,
    name character varying(100) NOT NULL,
    "website" character varying(100) NOT NULL,
    "phone" character varying(12) NOT NULL
);
COMMENT ON TABLE public."corporates"
    IS 'Tüm Tüzel Kişilik/Kurumlar için temel sınıf';

CREATE IF NOT EXISTS TABLE public."employers"
(
    "user_id" bigint PRIMARY KEY REFERENCES public."users" (id) MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE,
	"industry_id" smallint NOT NULL REFERENCES public."industries" (id)
);
COMMENT ON TABLE public."employers"
    IS 'İş Verenler / Şirketler';


CREATE IF NOT EXISTS TABLE public."unconfirmed_users"
(
    "user_id" integer PRIMARY KEY REFERENCES public."users" (id) MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE,
	"email" checked_email NOT NULL, 
    "user_uuid" uuid NOT NULL
);
COMMENT ON TABLE public."unconfirmed_users"
    IS 'Henüz email - ya da manuel onay almamış kullanıcıların geçici deposu';

CREATE IF NOT EXISTS TABLE public."cities"
(
    id smallserial PRIMARY KEY,
    name character varying(25) UNIQUE NOT NULL
);
COMMENT ON TABLE public."cities"
    IS 'Şehirler';

CREATE IF NOT EXISTS TABLE public."industries"
(
    id smallserial PRIMARY KEY,
    name character varying(50) UNIQUE NOT NULL
);
COMMENT ON TABLE public."industries"
    IS 'Ana Sektörler / Endüstriler ';

CREATE TABLE IF NOT EXISTS public.job_posts
(
    id bigserial PRIMARY KEY,
	user_id bigint NOT NULL REFERENCES public.users (id) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE,
    max_salary double precision NOT NULL,
    min_salary double precision NOT NULL,
    posting_date timestamp with time zone NOT NULL,
    closing_date date NOT NULL,
    open_positions smallint NOT NULL,
	city_id smallint NOT NULL REFERENCES public.cities (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION,
    job_id smallint NOT NULL REFERENCES public.jobs (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION,
	active boolean NOT NULL,
	description character varying(255) NOT NULL,
	UNIQUE (user_id, job_id, description)
);
COMMENT ON TABLE public.job_posts
    IS 'İş İlanları';
	
END;